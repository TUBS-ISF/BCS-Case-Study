/*
* generated by Xtext
*/
package org.xtext.deltarx.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.deltarx.services.DeltarxGrammarAccess;

public class DeltarxParser extends AbstractContentAssistParser {
	
	@Inject
	private DeltarxGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.deltarx.ui.contentassist.antlr.internal.InternalDeltarxParser createParser() {
		org.xtext.deltarx.ui.contentassist.antlr.internal.InternalDeltarxParser result = new org.xtext.deltarx.ui.contentassist.antlr.internal.InternalDeltarxParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSignalTypeAccess().getAlternatives(), "rule__SignalType__Alternatives");
					put(grammarAccess.getPortDirectionAccess().getAlternatives(), "rule__PortDirection__Alternatives");
					put(grammarAccess.getConnectorAccess().getTypeAlternatives_1_0(), "rule__Connector__TypeAlternatives_1_0");
					put(grammarAccess.getConnectorTypeOneAccess().getPortnameoneAlternatives_3_0(), "rule__ConnectorTypeOne__PortnameoneAlternatives_3_0");
					put(grammarAccess.getConnectorTypeOneAccess().getPortnametwoAlternatives_9_0(), "rule__ConnectorTypeOne__PortnametwoAlternatives_9_0");
					put(grammarAccess.getDeltarxAccess().getGroup_0(), "rule__Deltarx__Group_0__0");
					put(grammarAccess.getDeltarxAccess().getGroup_0_5(), "rule__Deltarx__Group_0_5__0");
					put(grammarAccess.getDeltarxAccess().getGroup_1(), "rule__Deltarx__Group_1__0");
					put(grammarAccess.getDeltarxAccess().getGroup_2(), "rule__Deltarx__Group_2__0");
					put(grammarAccess.getDeltarxAccess().getGroup_3(), "rule__Deltarx__Group_3__0");
					put(grammarAccess.getSignalAccess().getGroup(), "rule__Signal__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_2(), "rule__Component__Group_2__0");
					put(grammarAccess.getComponentAccess().getGroup_3(), "rule__Component__Group_3__0");
					put(grammarAccess.getComponentAccess().getGroup_4(), "rule__Component__Group_4__0");
					put(grammarAccess.getPortAccess().getGroup(), "rule__Port__Group__0");
					put(grammarAccess.getConnectorAccess().getGroup(), "rule__Connector__Group__0");
					put(grammarAccess.getConnectorTypeOneAccess().getGroup(), "rule__ConnectorTypeOne__Group__0");
					put(grammarAccess.getConnectorTypeTwoAccess().getGroup(), "rule__ConnectorTypeTwo__Group__0");
					put(grammarAccess.getDeltaAccess().getGroup(), "rule__Delta__Group__0");
					put(grammarAccess.getDeltaAccess().getGroup_1(), "rule__Delta__Group_1__0");
					put(grammarAccess.getDeltaAccess().getGroup_5(), "rule__Delta__Group_5__0");
					put(grammarAccess.getDeltaAccess().getGroup_6(), "rule__Delta__Group_6__0");
					put(grammarAccess.getDeltaAccess().getGroup_7(), "rule__Delta__Group_7__0");
					put(grammarAccess.getDeltaAccess().getGroup_8(), "rule__Delta__Group_8__0");
					put(grammarAccess.getDeltaAccess().getGroup_9(), "rule__Delta__Group_9__0");
					put(grammarAccess.getDeltaAccess().getGroup_10(), "rule__Delta__Group_10__0");
					put(grammarAccess.getDeltaAccess().getGroup_11(), "rule__Delta__Group_11__0");
					put(grammarAccess.getDeltaAccess().getGroup_12(), "rule__Delta__Group_12__0");
					put(grammarAccess.getDeltaAddPortAccess().getGroup(), "rule__DeltaAddPort__Group__0");
					put(grammarAccess.getDeltaRemovePortAccess().getGroup(), "rule__DeltaRemovePort__Group__0");
					put(grammarAccess.getDeltaAddComponentAccess().getGroup(), "rule__DeltaAddComponent__Group__0");
					put(grammarAccess.getDeltaAddComponentAccess().getGroup_1(), "rule__DeltaAddComponent__Group_1__0");
					put(grammarAccess.getDeltaRemoveComponentAccess().getGroup(), "rule__DeltaRemoveComponent__Group__0");
					put(grammarAccess.getDeltaRemoveComponentAccess().getGroup_1(), "rule__DeltaRemoveComponent__Group_1__0");
					put(grammarAccess.getDeltaAddConnectorAccess().getGroup(), "rule__DeltaAddConnector__Group__0");
					put(grammarAccess.getDeltaAddConnectorAccess().getGroup_1(), "rule__DeltaAddConnector__Group_1__0");
					put(grammarAccess.getDeltaRemoveConnectorAccess().getGroup(), "rule__DeltaRemoveConnector__Group__0");
					put(grammarAccess.getDeltaRemoveConnectorAccess().getGroup_1(), "rule__DeltaRemoveConnector__Group_1__0");
					put(grammarAccess.getDeltarxAccess().getNameAssignment_0_1(), "rule__Deltarx__NameAssignment_0_1");
					put(grammarAccess.getDeltarxAccess().getFmdirAssignment_0_3(), "rule__Deltarx__FmdirAssignment_0_3");
					put(grammarAccess.getDeltarxAccess().getSignalsAssignment_0_5_2(), "rule__Deltarx__SignalsAssignment_0_5_2");
					put(grammarAccess.getDeltarxAccess().getComponentsAssignment_1_2(), "rule__Deltarx__ComponentsAssignment_1_2");
					put(grammarAccess.getDeltarxAccess().getConnectorsAssignment_2_2(), "rule__Deltarx__ConnectorsAssignment_2_2");
					put(grammarAccess.getDeltarxAccess().getDeltasAssignment_3_2(), "rule__Deltarx__DeltasAssignment_3_2");
					put(grammarAccess.getSignalAccess().getNameAssignment_0(), "rule__Signal__NameAssignment_0");
					put(grammarAccess.getSignalAccess().getTypeAssignment_1(), "rule__Signal__TypeAssignment_1");
					put(grammarAccess.getComponentAccess().getNameAssignment_0(), "rule__Component__NameAssignment_0");
					put(grammarAccess.getComponentAccess().getPortsAssignment_2_2(), "rule__Component__PortsAssignment_2_2");
					put(grammarAccess.getComponentAccess().getConnectorsAssignment_3_2(), "rule__Component__ConnectorsAssignment_3_2");
					put(grammarAccess.getComponentAccess().getSubcomponentsAssignment_4_2(), "rule__Component__SubcomponentsAssignment_4_2");
					put(grammarAccess.getPortAccess().getDirectionAssignment_0(), "rule__Port__DirectionAssignment_0");
					put(grammarAccess.getPortAccess().getNameAssignment_1(), "rule__Port__NameAssignment_1");
					put(grammarAccess.getPortAccess().getSignalAssignment_2(), "rule__Port__SignalAssignment_2");
					put(grammarAccess.getConnectorAccess().getNameAssignment_0(), "rule__Connector__NameAssignment_0");
					put(grammarAccess.getConnectorAccess().getTypeAssignment_1(), "rule__Connector__TypeAssignment_1");
					put(grammarAccess.getConnectorTypeOneAccess().getSourceAssignment_1(), "rule__ConnectorTypeOne__SourceAssignment_1");
					put(grammarAccess.getConnectorTypeOneAccess().getPortnameoneAssignment_3(), "rule__ConnectorTypeOne__PortnameoneAssignment_3");
					put(grammarAccess.getConnectorTypeOneAccess().getSignaltypeoneAssignment_5(), "rule__ConnectorTypeOne__SignaltypeoneAssignment_5");
					put(grammarAccess.getConnectorTypeOneAccess().getSignaltypetwoAssignment_7(), "rule__ConnectorTypeOne__SignaltypetwoAssignment_7");
					put(grammarAccess.getConnectorTypeOneAccess().getPortnametwoAssignment_9(), "rule__ConnectorTypeOne__PortnametwoAssignment_9");
					put(grammarAccess.getConnectorTypeOneAccess().getDestinationAssignment_11(), "rule__ConnectorTypeOne__DestinationAssignment_11");
					put(grammarAccess.getConnectorTypeTwoAccess().getSourceAssignment_1(), "rule__ConnectorTypeTwo__SourceAssignment_1");
					put(grammarAccess.getConnectorTypeTwoAccess().getSourcesignalAssignment_3(), "rule__ConnectorTypeTwo__SourcesignalAssignment_3");
					put(grammarAccess.getConnectorTypeTwoAccess().getDestinationsignalAssignment_5(), "rule__ConnectorTypeTwo__DestinationsignalAssignment_5");
					put(grammarAccess.getConnectorTypeTwoAccess().getDestinationAssignment_7(), "rule__ConnectorTypeTwo__DestinationAssignment_7");
					put(grammarAccess.getDeltaAccess().getNameAssignment_0(), "rule__Delta__NameAssignment_0");
					put(grammarAccess.getDeltaAccess().getAfterAssignment_1_1(), "rule__Delta__AfterAssignment_1_1");
					put(grammarAccess.getDeltaAccess().getAppconAssignment_3(), "rule__Delta__AppconAssignment_3");
					put(grammarAccess.getDeltaAccess().getRemoveConnectorAssignment_5_2(), "rule__Delta__RemoveConnectorAssignment_5_2");
					put(grammarAccess.getDeltaAccess().getRemoveComponentAssignment_6_2(), "rule__Delta__RemoveComponentAssignment_6_2");
					put(grammarAccess.getDeltaAccess().getRemoveSignalAssignment_7_2(), "rule__Delta__RemoveSignalAssignment_7_2");
					put(grammarAccess.getDeltaAccess().getRemovePortAssignment_8_2(), "rule__Delta__RemovePortAssignment_8_2");
					put(grammarAccess.getDeltaAccess().getNewSignalAssignment_9_2(), "rule__Delta__NewSignalAssignment_9_2");
					put(grammarAccess.getDeltaAccess().getNewComponentAssignment_10_2(), "rule__Delta__NewComponentAssignment_10_2");
					put(grammarAccess.getDeltaAccess().getNewConnectorAssignment_11_2(), "rule__Delta__NewConnectorAssignment_11_2");
					put(grammarAccess.getDeltaAccess().getNewPortAssignment_12_2(), "rule__Delta__NewPortAssignment_12_2");
					put(grammarAccess.getDeltaAddPortAccess().getPortAssignment_0(), "rule__DeltaAddPort__PortAssignment_0");
					put(grammarAccess.getDeltaAddPortAccess().getPortComponentAssignment_2(), "rule__DeltaAddPort__PortComponentAssignment_2");
					put(grammarAccess.getDeltaRemovePortAccess().getPortNameAssignment_0(), "rule__DeltaRemovePort__PortNameAssignment_0");
					put(grammarAccess.getDeltaRemovePortAccess().getPortComponentAssignment_2(), "rule__DeltaRemovePort__PortComponentAssignment_2");
					put(grammarAccess.getDeltaAddComponentAccess().getComponentAssignment_0(), "rule__DeltaAddComponent__ComponentAssignment_0");
					put(grammarAccess.getDeltaAddComponentAccess().getSuperComponentAssignment_1_1(), "rule__DeltaAddComponent__SuperComponentAssignment_1_1");
					put(grammarAccess.getDeltaRemoveComponentAccess().getComponentAssignment_0(), "rule__DeltaRemoveComponent__ComponentAssignment_0");
					put(grammarAccess.getDeltaRemoveComponentAccess().getSuperComponentAssignment_1_1(), "rule__DeltaRemoveComponent__SuperComponentAssignment_1_1");
					put(grammarAccess.getDeltaAddConnectorAccess().getConnectorAssignment_0(), "rule__DeltaAddConnector__ConnectorAssignment_0");
					put(grammarAccess.getDeltaAddConnectorAccess().getSuperComponentAssignment_1_1(), "rule__DeltaAddConnector__SuperComponentAssignment_1_1");
					put(grammarAccess.getDeltaRemoveConnectorAccess().getConnectorAssignment_0(), "rule__DeltaRemoveConnector__ConnectorAssignment_0");
					put(grammarAccess.getDeltaRemoveConnectorAccess().getSuperComponentAssignment_1_1(), "rule__DeltaRemoveConnector__SuperComponentAssignment_1_1");
					put(grammarAccess.getDeltarxAccess().getUnorderedGroup(), "rule__Deltarx__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.deltarx.ui.contentassist.antlr.internal.InternalDeltarxParser typedParser = (org.xtext.deltarx.ui.contentassist.antlr.internal.InternalDeltarxParser) parser;
			typedParser.entryRuleDeltarx();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DeltarxGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DeltarxGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
