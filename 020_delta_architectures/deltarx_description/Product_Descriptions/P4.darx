architecture P4 for featuremodel 'D:/Dokumente/Studium/TU Braunschweig/Masterarbeit/svn/Masterarbeit/case_study/BCS_Deltarx/SPL_Description/BCS.featuremodel' { 
 	 signals {
	 	 pw_but_mv_dn boolean
	 	 pw_but_mv_up boolean
	 	 em_but_mv_left boolean
	 	 em_but_mv_right boolean
	 	 em_but_mv_up boolean
	 	 em_but_mv_dn boolean
	 	 pw_but_up boolean
	 	 pw_but_dn boolean
	 	 em_but_right boolean
	 	 em_but_left boolean
	 	 em_but_up boolean
	 	 em_but_down boolean
	 	 em_pos_left boolean
	 	 em_pos_right boolean
	 	 em_pos_top boolean
	 	 em_pos_bottom boolean
	 	 em_mv_left boolean
	 	 em_mv_right boolean
	 	 em_mv_up boolean
	 	 em_mv_down boolean
	 	 finger_detected boolean
	 	 fp_on boolean
	 	 fp_off boolean
	 	 pw_pos_up boolean
	 	 pw_pos_dn boolean
	 	 pw_auto_mv_up boolean
	 	 pw_auto_mv_dn boolean
	 	 pw_auto_mv_stop boolean
	 	 as_activated boolean
	 	 as_deactivated boolean
	 	 as_alarm_detected boolean
	 	 time_alarm_elapsed boolean
	 	 key_pos_lock boolean
	 	 key_pos_unlock boolean
	 	 as_active_on boolean
	 	 as_active_off boolean
	 	 as_alarm_on boolean
	 	 as_alarm_off boolean
	 	 activate_as boolean
	 	 deactivate_as boolean
	 	 as_alarm_was_detected boolean
	 	 cls_unlock boolean
	 	 cls_lock boolean
	 	 im_alarm_detected boolean
	 	 as_im_alarm_on boolean
	 	 as_im_alarm_off boolean
	 	 rck_but_lock boolean
	 	 rck_but_unlock boolean
	 	 rck_lock boolean
	 	 rck_unlock boolean
	 	 door_open boolean
	 	 time_rck_sf_elapsed boolean
	 	 pw_rm_up boolean
	 	 pw_rm_dn boolean
	 	 car_drives boolean
	 	 car_lock boolean
	 	 car_unlock boolean
	 } 
	 connectors {
	 	 hmi1 (HMI, em_but_right, em_but_right, EM) 
	 	 hmi2 (HMI, em_but_left, em_but_left, EM) 
	 	 hmi3 (HMI, em_but_up, em_but_up, EM) 
	 	 hmi4 (HMI, em_but_down, em_but_down, EM) 
	 	 hmi7 (HMI, pw_but_dn, pw_but_dn, FP) 
	 	 env1 (ENV, pw_but_mv_dn, pw_but_mv_dn, HMI) 
	 	 env2 (ENV, pw_but_mv_up, pw_but_mv_up, HMI) 
	 	 env3 (ENV, em_but_mv_left, em_but_mv_left, HMI) 
	 	 env4 (ENV, em_but_mv_right, em_but_mv_right, HMI) 
	 	 env5 (ENV, em_but_mv_up, em_but_mv_up, HMI) 
	 	 env6 (ENV, em_but_mv_dn, em_but_mv_dn, HMI) 
	 	 env7 (ENV, em_pos_left, em_pos_left, EM) 
	 	 env8 (ENV, em_pos_right, em_pos_right, EM) 
	 	 env9 (ENV, em_pos_top, em_pos_top, EM) 
	 	 env10 (ENV, em_pos_bottom, em_pos_bottom, EM) 
	 	 env11 (ENV, finger_detected, finger_detected, FP) 
	 	 em1 (EM, em_mv_left, em_mv_left, ENV) 
	 	 em2 (EM, em_mv_right, em_mv_right, ENV) 
	 	 em3 (EM, em_mv_up, em_mv_up, ENV) 
	 	 em4 (EM, em_mv_down, em_mv_down, ENV) 
	 	 fpautopw1 (FP, fp_on, fp_on, AutoPW) 
	 	 fpautopw2 (FP, fp_off, fp_off, AutoPW) 
	 	 hmiautopw1 (HMI, pw_but_up, pw_but_up, AutoPW) 
	 	 hmiautopw2 (HMI, pw_but_dn, pw_but_dn, AutoPW) 
	 	 autopwenv1 (AutoPW, pw_auto_mv_up, pw_auto_mv_up, ENV) 
	 	 autopwenv2 (AutoPW, pw_auto_mv_dn, pw_auto_mv_dn, ENV) 
	 	 autopwenv3 (AutoPW, pw_auto_mv_stop, pw_auto_mv_stop, ENV) 
	 	 envautopw1 (ENV, pw_pos_up, pw_pos_up, AutoPW) 
	 	 envautopw2 (ENV, pw_pos_dn, pw_pos_dn, AutoPW) 
	 	 envhm1 (ENV, activate_as, activate_as, HMI) 
	 	 envhm2 (ENV, deactivate_as, deactivate_as, HMI) 
	 	 hmias1 (HMI, as_activated, as_activated, AS) 
	 	 hmias1 (HMI, as_deactivated, as_deactivated, AS) 
	 	 envas1 (ENV, as_alarm_detected, as_alarm_detected, AS) 
	 	 envas2 (ENV, time_alarm_elapsed, time_alarm_elapsed, AS) 
	 	 envas3 (ENV, key_pos_lock, key_pos_lock, AS) 
	 	 envas4 (ENV, key_pos_unlock, key_pos_unlock, AS) 
	 	 asenv1 (AS, as_active_on, as_active_on, ENV) 
	 	 asenv2 (AS, as_alarm_on, as_alarm_on, ENV) 
	 	 asenv3 (AS, as_active_off, as_active_off, ENV) 
	 	 asenv4 (AS, as_alarm_off, as_alarm_off, ENV) 
	 	 asenv5 (AS, as_alarm_was_detected, as_alarm_was_detected, ENV) 
	 	 envcls1 (ENV, key_pos_lock, key_pos_lock, CLS) 
	 	 envcls2 (ENV, key_pos_unlock, key_pos_unlock, CLS) 
	 	 clsenv1 (CLS, cls_lock, cls_lock, ENV) 
	 	 clsenv2 (CLS, cls_unlock, cls_unlock, ENV) 
	 	 clsautopw1 (CLS, cls_lock, cls_lock, AutoPW) 
	 	 clsautopw2 (CLS, cls_unlock, cls_unlock, AutoPW) 
	 	 envasim1 (ENV, im_alarm_detected, im_alarm_detected, AS) 
	 	 asimenv1 (AS, as_im_alarm_on, as_im_alarm_on, ENV) 
	 	 asimenv2 (AS, as_im_alarm_off, as_im_alarm_off, ENV) 
	 	 envrck1 (ENV, rck_but_lock, rck_but_lock, RCK_Ctrl) 
	 	 envrck2 (ENV, rck_but_unlock, rck_but_unlock, RCK_Ctrl) 
	 	 rckcls1 (RCK_Ctrl, rck_lock, rck_lock, CLS) 
	 	 rckcls2 (RCK_Ctrl, rck_unlock, rck_unlock, CLS) 
	 	 envrcksf1 (ENV, door_open, door_open, RCK_Ctrl) 
	 	 envrcksf2 (ENV, time_rck_sf_elapsed, time_rck_sf_elapsed, RCK_Ctrl) 
	 	 envrckcap1 (ENV, pw_rm_up, pw_rm_up, RCK_Ctrl) 
	 	 envrckcap2 (ENV, pw_rm_dn, pw_rm_dn, RCK_Ctrl) 
	 	 rckcapautopw1 (RCK_Ctrl, pw_but_up, pw_but_up, AutoPW) 
	 	 rckcapautopw2 (RCK_Ctrl, pw_but_dn, pw_but_dn, AutoPW) 
	 	 rckcapfp1 (RCK_Ctrl, pw_but_dn, pw_but_dn, FP) 
	 	 envclsal1 (ENV, car_drives, car_drives, CLS) 
	 	 envclsal2 (ENV, door_open, door_open, CLS) 
	 	 clsalsenv1 (CLS, car_lock, car_lock, ENV) 
	 	 clsalsenv2 (CLS, car_unlock, car_unlock, ENV) 
	 } 
	 components {
	 	 HMI{ 
	 	 	 ports {
	 	 	 	in p_pw_but_mv_dn pw_but_mv_dn
	 	 	 	in p_pw_but_mv_up pw_but_mv_up
	 	 	 	in p_em_but_mv_left em_but_mv_left
	 	 	 	in p_em_but_mv_right em_but_mv_right
	 	 	 	in p_em_but_mv_up em_but_mv_up
	 	 	 	in p_em_but_mv_bottom em_but_mv_up
	 	 	 	out p_pw_but_up pw_but_up
	 	 	 	out p_pw_but_dn pw_but_dn
	 	 	 	out p_em_but_right em_but_right
	 	 	 	out p_em_but_left em_but_left
	 	 	 	out p_em_but_up em_but_up
	 	 	 	out p_em_but_down em_but_down
	 	 	 	in p_activate_as activate_as
	 	 	 	in p_deactivate_as deactivate_as
	 	 	 	out p_as_activated as_activated
	 	 	 	out p_as_deactivated as_deactivated
	 	 	 }
	 	 }
	 	 FP{ 
	 	 	 ports {
	 	 	 	in p_finger_detected finger_detected
	 	 	 	in p_pw_but_dn pw_but_dn
	 	 	 	out p_fp_on fp_on
	 	 	 	out p_fp_off fp_off
	 	 	 }
	 	 }
	 	 EM{ 
	 	 	 ports {
	 	 	 	in p_em_but_right em_but_right
	 	 	 	in p_em_but_left em_but_left
	 	 	 	in p_em_but_up em_but_up
	 	 	 	in p_em_but_down em_but_down
	 	 	 	in p_em_pos_left em_pos_left
	 	 	 	in p_em_pos_right em_pos_right
	 	 	 	in p_em_pos_top em_pos_top
	 	 	 	in p_em_pos_bottom em_pos_bottom
	 	 	 	out p_em_mv_left em_mv_left
	 	 	 	out p_em_mv_right em_mv_right
	 	 	 	out p_em_mv_up em_mv_up
	 	 	 	out p_em_mv_dn em_mv_down
	 	 	 }
	 	 }
	 	 AutoPW{ 
	 	 	 ports {
	 	 	 	in p_fp_on fp_on
	 	 	 	in p_fp_off fp_off
	 	 	 	in p_pw_but_up pw_but_up
	 	 	 	in p_pw_but_dn pw_but_dn
	 	 	 	out p_pw_auto_mv_up pw_auto_mv_up
	 	 	 	out p_pw_auto_mv_dn pw_auto_mv_dn
	 	 	 	out p_pw_auto_mv_stop pw_auto_mv_stop
	 	 	 	in p_pw_pos_up pw_pos_up
	 	 	 	in p_pw_pos_dn pw_pos_dn
	 	 	 	in p_cls_lock cls_lock
	 	 	 	in p_cls_unlock cls_unlock
	 	 	 }
	 	 }
	 	 AS{ 
	 	 	 ports {
	 	 	 	in p_as_activated as_activated
	 	 	 	in p_as_deactivated as_deactivated
	 	 	 	in p_as_alarm_detected as_alarm_detected
	 	 	 	in p_time_alarm_elapsed time_alarm_elapsed
	 	 	 	in p_key_pos_lock key_pos_lock
	 	 	 	in p_key_pos_unlock key_pos_unlock
	 	 	 	out p_as_active_on as_active_on
	 	 	 	out p_as_alarm_on as_alarm_on
	 	 	 	out p_as_active_off as_active_off
	 	 	 	out p_as_alarm_off as_alarm_off
	 	 	 	out p_as_alarm_was_detected as_alarm_was_detected
	 	 	 	in p_im_alarm_detected im_alarm_detected
	 	 	 	out p_as_im_alarm_on as_im_alarm_on
	 	 	 	out p_as_im_alarm_off as_im_alarm_off
	 	 	 }
	 	 }
	 	 CLS{ 
	 	 	 ports {
	 	 	 	in p_key_pos_lock key_pos_lock
	 	 	 	in p_key_pos_unlock key_pos_unlock
	 	 	 	out p_cls_lock cls_lock
	 	 	 	out p_cls_unlock cls_unlock
	 	 	 	in p_rck_lock rck_lock
	 	 	 	in p_rck_unlock rck_unlock
	 	 	 	in p_car_drives car_drives
	 	 	 	in p_door_open door_open
	 	 	 	out p_car_lock car_lock
	 	 	 	out p_car_unlock car_unlock
	 	 	 }
	 	 }
	 	 RCK_Ctrl{ 
	 	 	 ports {
	 	 	 	in p_rck_but_lock rck_but_lock
	 	 	 	in p_rck_but_unlock rck_but_unlock
	 	 	 	out p_rck_lock rck_lock
	 	 	 	out p_rck_unlock rck_unlock
	 	 	 	in p_door_open door_open
	 	 	 	in p_time_rck_sf_elapsed time_rck_sf_elapsed
	 	 	 	in p_pw_rm_up pw_rm_up
	 	 	 	in p_pw_rm_dn pw_rm_dn
	 	 	 	out p_pw_but_up pw_but_up
	 	 	 	out p_pw_but_dn pw_but_dn
	 	 	 }
	 	 }

 	 } 
 
}