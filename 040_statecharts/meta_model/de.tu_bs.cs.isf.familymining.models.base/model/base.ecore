<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="base" nsURI="http://www.tu-braunschweig.de/isf/familymining/base"
    nsPrefix="base">
  <eClassifiers xsi:type="ecore:EClass" name="StringToStringMapEntry" instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EStructuralFeatureToWrappedTypeMapEntry"
      instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EReference" name="key" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EStructuralFeature"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//WrappedType"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringToAlternativeValuesMap" instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" upperBound="-1"
        eType="#//EStructuralFeatureToWrappedTypeMapEntry" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterizedElement" abstract="true">
    <eOperations name="setParameter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="this.getParameters().put(key, value);"/>
        <details key="documentation" value="This method is a wrapper method, which exists in order to set parameters more conveniently.&#xD;&#xA;It wraps the Map method put(String key, String value) for the Map returned by getParameters().&#xD;&#xA;Consequently, it overwrites any value, which is already set for the given parameter."/>
      </eAnnotations>
      <eParameters name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="getParameter" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return this.getParameters().get(key);"/>
        <details key="documentation" value="This method is a wrapper method, which exists in order to access parameters more conveniently.&#xD;&#xA;It wraps the Map method get(String key) for the Map returned by getParameters().&#xD;&#xA;It consequently returns null if no value is found for the given key."/>
      </eAnnotations>
      <eParameters name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="removeParameter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="this.getParameters().removeKey(key);"/>
        <details key="documentation" value="This method is a wrapper method, which exists in order to remove parameters more conveniently.&#xD;&#xA;It wraps the Map method removeKey(String key) for the Map returned by getParameters()."/>
      </eAnnotations>
      <eParameters name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="containsParameter" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return this.getParameters().containsKey(key);"/>
        <details key="documentation" value="This method is a wrapper method, which exists in order to check whether a given parameter exists more conveniently.&#xD;&#xA;It wraps the Map method containsKey(String key) for the Map returned by getParameters()."/>
      </eAnnotations>
      <eParameters name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//StringToStringMapEntry" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariableValueElement" abstract="true">
    <eOperations name="addAlternativeValuesMap">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.ecore.util.EcoreEMap&lt;EStructuralFeature, WrappedType> map = new org.eclipse.emf.ecore.util.EcoreEMap&lt;EStructuralFeature, WrappedType>(BasePackage.Literals.ESTRUCTURAL_FEATURE_TO_WRAPPED_TYPE_MAP_ENTRY, de.tu_bs.cs.isf.familymining.models.base.impl.EStructuralFeatureToWrappedTypeMapEntryImpl.class, this, BasePackage.PARAMETERIZED_ELEMENT__PARAMETERS);&#xD;&#xA;this.getAlternativeValues().put(model, map);"/>
      </eAnnotations>
      <eParameters name="model" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="alternativeValues" upperBound="-1"
        eType="#//StringToAlternativeValuesMap" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariableModel" abstract="true" eSuperTypes="#//VariableValueElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="baseModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="compareModels" upperBound="-1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="containingModels" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariableElement" abstract="true" eSuperTypes="#//VariableValueElement">
    <eOperations name="isContainedInModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getContainingModels().contains(model);"/>
        <details key="documentation" value="Checks whether the element is contained in the given model."/>
      </eAnnotations>
      <eParameters name="model" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="isMandatory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (getVariability() == Variability.MANDATORY) {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}&#xD;&#xA;return false;"/>
        <details key="documentation" value="Returns whether this element is mandatory."/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isAlternative" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (getVariability() == Variability.ALTERNATIVE) {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}&#xD;&#xA;return false;"/>
        <details key="documentation" value="Returns whether this element is alternative."/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOptional" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (getVariability() == Variability.OPTIONAL) {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}&#xD;&#xA;return false;"/>
        <details key="documentation" value="Returns whether this element is optional."/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOptionalAlternative" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (getVariability() == Variability.OPTIONAL_ALTERNATIVE) {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}&#xD;&#xA;return false;"/>
        <details key="documentation" value="Returns whether this element is optional alternative."/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isVariabilitySet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (getVariability() != Variability.NONE) {&#xD;&#xA;&#x9;return true;&#xD;&#xA;}&#xD;&#xA;return false;"/>
        <details key="documentation" value="Returns whether the variability for this element was set."/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="variabilityGroupId" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="containingModels" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="relatedVariabilityGroupIds"
        upperBound="-1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="variability" eType="#//Variability"
        defaultValueLiteral="NONE"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Entity" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ModelEntity" abstract="true" eSuperTypes="#//Entity #//VariableModel">
    <eOperations name="getModelFileExtension" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContainerEntity" abstract="true" eSuperTypes="#//Entity #//VariableElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="NodeEntity" abstract="true" eSuperTypes="#//Entity #//VariableElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="EdgeEntity" abstract="true" eSuperTypes="#//Entity #//VariableElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="WrappedType" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="WrappedString" eSuperTypes="#//WrappedType">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="wrappedString" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WrappedEObject" eSuperTypes="#//WrappedType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="wrappedEObject" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Variability">
    <eLiterals name="NONE"/>
    <eLiterals name="MANDATORY" value="1"/>
    <eLiterals name="ALTERNATIVE" value="2"/>
    <eLiterals name="OPTIONAL" value="3"/>
    <eLiterals name="OPTIONAL_ALTERNATIVE" value="4" literal="OPTIONAL_ALTERNATIVE"/>
  </eClassifiers>
</ecore:EPackage>
